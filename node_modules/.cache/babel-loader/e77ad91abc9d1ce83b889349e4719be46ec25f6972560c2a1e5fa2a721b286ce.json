{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./notification.css\";import Navbar from'../navbar/navbar';import{useLocation,useNavigate}from\"react-router-dom\";// Import useLocation to detect current route\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Notification=_ref=>{let{children}=_ref;//state variable to keep track of keeping notification window open\nconst[apptWindow,setApptWindow]=useState(false);//false initially, show on new booking \nconst[isLoggedIn,setLogin]=useState(false);const[name,setName]=useState('');const[user,setUser]=useState('');const[email,setEmail]=useState('');const[phoneNum,setPhoneNum]=useState('');const[apptData,setApptData]=useState('');//data object\nconst[doctorName,setDoctorName]=useState('');//data object\nconst[doctorSpeciality,setDoctorSpeciality]=useState('');//data object\nconst[apptDate,setApptDate]=useState('');//data object\nconst[timeSlot,setTimeSlot]=useState('');//data object\nconst[storageVersion,setStorageVersion]=useState(0);// To force re-render\nconst location=useLocation();// Get current route\nconst navigate=useNavigate();// Check if we're on the /appointments route\nconst isAppointmentsPage=location.pathname===\"/appointments\";//boolean function to open or close notification container  \nconst handleApptWindow=e=>setApptWindow(false);// to handle if user has login successfully, else reroute to login\nuseEffect(()=>{if(isAppointmentsPage){const storedName=sessionStorage.getItem(\"name\");const storedEmail=sessionStorage.getItem(\"email\");//if not successfully login, navigate to /login endpoint\nif(storedName){setName(storedName);setEmail(storedEmail);}else{navigate(\"/login\");}}},[isAppointmentsPage,navigate]);//dependencies: run when route changes\n// function to handle appointment bookings from doctorCardIC component\nconst loadAppointmentData=()=>{// Get stored data from sessionStorage & localStorage\nconst storedEmail=sessionStorage.getItem(\"email\");const storedName=sessionStorage.getItem(\"name\");const storedPhoneNum=sessionStorage.getItem(\"phoneNum\");const appointmentsData=localStorage.getItem(\"appointments\");//set the relevant state variables\nif(storedEmail){setLogin(true);setEmail(storedEmail);setName(storedName);setPhoneNum(storedPhoneNum);}// to ensure that there is appointmentData before applying JSON.parse()\nif(appointmentsData){const parsedData=JSON.parse(appointmentsData);const storedAppData=parsedData&&parsedData[0];// Safe access\nif(storedAppData){setApptData(storedAppData);setDoctorName(storedAppData.doctorName);setDoctorSpeciality(storedAppData.doctorSpeciality);setTimeSlot(storedAppData.timeSlot);setApptDate(storedAppData.apptDate);setApptWindow(true);//show notification when new data is present\n}else{setApptData(null);setApptWindow(false);//hide notification window if no appointment\n}}else{//no appointmentData\nsetApptData(null);setApptWindow(false);//hide notification window if no appointment\n}};useEffect(()=>{//Initial loading when component is mounted\nloadAppointmentData();const handleStorageChange=()=>setStorageVersion(prev=>prev+1);//listen for storage changes from DoctorCardIC componenent\nwindow.addEventListener(\"storage\",handleStorageChange);return()=>window.removeEventListener(\"storage\",handleStorageChange);},[]);//empty dependency array for 1 run in initial render\n// Re-run loadAppointmentData when storageVersion changes\nuseEffect(()=>{loadAppointmentData();},[storageVersion]);//To handle appointment cancellation\nconst handleCancelAppointment=()=>{// Confirm cancellation with user\nif(window.confirm(\"Are you sure you want to cancel this appointment?\")){// Get most recent appointments from localStorage\nconst appointmentsData=localStorage.getItem(\"appointments\");if(appointmentsData){let appointments=JSON.parse(appointmentsData);// Filter out the current appointment\n// Assuming appointments is an array and we're removing the first one\n// You might need to modify this logic if you have multiple appointments\n// and want to identify them differently (e.g., by ID)\nappointments=appointments.filter((appt,index)=>index!==0);// Update localStorage\nif(appointments.length>0){localStorage.setItem(\"appointments\",JSON.stringify(appointments));}else{localStorage.removeItem(\"appointments\");}// Clear the state\nsetApptData('');setDoctorName('');setDoctorSpeciality('');setApptDate('');setTimeSlot('');setApptWindow(false);// Optional: Show confirmation\nloadAppointmentData();alert(\"Appointment has been canceled successfully!\");}}};console.log(\"Rendering Notification.js\");return/*#__PURE__*/_jsxs(\"div\",{children:[children,isAppointmentsPage?/*#__PURE__*/_jsxs(\"div\",{className:\"appointments-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Your Appointments\"}),isLoggedIn&&apptData?/*#__PURE__*/_jsxs(\"div\",{className:\"appointment-details\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upcoming Appointment\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"apptDetails\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Doctor: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt2\",children:[\" \\u2002 \",doctorName,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Speciality: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt2\",children:[\" \\u2002 \",doctorSpeciality,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Name: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt2\",children:[\" \\u2002 \",name,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Phone Number: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt2\",children:[\" \\u2002 \",phoneNum,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Date of Appointment: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt2\",children:[\" \\u2002 \",apptDate,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Time Slot: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt2\",children:[\" \\u2002 \",timeSlot,\" \"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"appt-actions\",style:{marginTop:'20px',textAlign:'center'},children:/*#__PURE__*/_jsx(\"button\",{className:\"cancel-btn\",onClick:handleCancelAppointment,children:\" Cancel \"})})]}):/*#__PURE__*/_jsx(\"p\",{children:\" No upcoming appointments \"})]}):apptWindow&&isLoggedIn&&apptData&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"notification-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\" Appointment Details\",/*#__PURE__*/_jsxs(\"span\",{children:[\" \",/*#__PURE__*/_jsx(\"button\",{name:\"closeAppt\",className:\"close-btn\",onClick:handleApptWindow,children:\"X \"}),\"  \"]}),\" \"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"apptDetails\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Doctor:  \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt\",children:[\" \\u2002 \",doctorName,\" \"]}),\"   \"]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Speciality: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt\",children:[\" \\u2002 \",doctorSpeciality,\" \"]}),\" \"]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Name: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt\",children:[\" \\u2002 \",name,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Phone Number: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt\",children:[\" \\u2002 \",phoneNum,\"  \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Date of Appointment: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt\",children:[\" \\u2002 \",apptDate,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"lbl\",children:[\" Time Slot: \",/*#__PURE__*/_jsxs(\"span\",{className:\"spanTxt\",children:[\" \\u2002 \",timeSlot,\" \"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"appt-actions\",style:{marginTop:'20px',textAlign:'center'},children:/*#__PURE__*/_jsx(\"button\",{className:\"cancel-btn\",onClick:handleCancelAppointment,children:\" Cancel \"})})]})}),\";\"]});};//Export Notification component for use with other parts of the application\nexport default Notification;","map":{"version":3,"names":["React","useState","useEffect","Navbar","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Notification","_ref","children","apptWindow","setApptWindow","isLoggedIn","setLogin","name","setName","user","setUser","email","setEmail","phoneNum","setPhoneNum","apptData","setApptData","doctorName","setDoctorName","doctorSpeciality","setDoctorSpeciality","apptDate","setApptDate","timeSlot","setTimeSlot","storageVersion","setStorageVersion","location","navigate","isAppointmentsPage","pathname","handleApptWindow","e","storedName","sessionStorage","getItem","storedEmail","loadAppointmentData","storedPhoneNum","appointmentsData","localStorage","parsedData","JSON","parse","storedAppData","handleStorageChange","prev","window","addEventListener","removeEventListener","handleCancelAppointment","confirm","appointments","filter","appt","index","length","setItem","stringify","removeItem","alert","console","log","className","style","marginTop","textAlign","onClick"],"sources":["C:/Users/lim_l/Documents/progamming/032-grihf-frontend_capstone_starter_code/src/Components/notification/notification.js"],"sourcesContent":["import React, { useState, useEffect }  from \"react\";\r\nimport \"./notification.css\";\r\nimport Navbar from '../navbar/navbar';\r\nimport { useLocation, useNavigate } from \"react-router-dom\"; // Import useLocation to detect current route\r\n\r\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/\r\n\r\n\r\nconst Notification = ({children}) => {\r\n\r\n  //state variable to keep track of keeping notification window open\r\n  const [apptWindow, setApptWindow] = useState(false); //false initially, show on new booking \r\n  const [isLoggedIn, setLogin ] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [user, setUser] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n  const [apptData, setApptData] = useState(''); //data object\r\n  const [doctorName, setDoctorName] = useState(''); //data object\r\n  const [doctorSpeciality, setDoctorSpeciality] = useState(''); //data object\r\n  const [apptDate, setApptDate] = useState(''); //data object\r\n  const [timeSlot, setTimeSlot] = useState(''); //data object\r\n  const [storageVersion, setStorageVersion] = useState(0); // To force re-render\r\n\r\n  const location = useLocation(); // Get current route\r\n  const navigate = useNavigate();\r\n\r\n  // Check if we're on the /appointments route\r\n  const isAppointmentsPage = location.pathname === \"/appointments\";\r\n\r\n//boolean function to open or close notification container  \r\nconst handleApptWindow = (e) => setApptWindow(false);\r\n\r\n\r\n// to handle if user has login successfully, else reroute to login\r\nuseEffect( () => {\r\n  if(isAppointmentsPage) {\r\n   \r\n    const storedName = sessionStorage.getItem(\"name\");\r\n    const storedEmail = sessionStorage.getItem(\"email\");\r\n\r\n    //if not successfully login, navigate to /login endpoint\r\n    if (storedName) {\r\n        setName(storedName) ;\r\n        setEmail(storedEmail);\r\n    } else {\r\n        navigate(\"/login\");\r\n     }\r\n   }\r\n   \r\n}, [isAppointmentsPage, navigate]); //dependencies: run when route changes\r\n\r\n// function to handle appointment bookings from doctorCardIC component\r\nconst loadAppointmentData = () => {\r\n\r\n  // Get stored data from sessionStorage & localStorage\r\n  const storedEmail = sessionStorage.getItem(\"email\");\r\n  const storedName = sessionStorage.getItem(\"name\");\r\n  const storedPhoneNum= sessionStorage.getItem(\"phoneNum\");\r\n  const appointmentsData = localStorage.getItem(\"appointments\");\r\n\r\n   //set the relevant state variables\r\n  if( storedEmail) {\r\n    setLogin(true);\r\n    setEmail(storedEmail);\r\n    setName(storedName);\r\n    setPhoneNum(storedPhoneNum);\r\n  }\r\n\r\n  // to ensure that there is appointmentData before applying JSON.parse()\r\n  if(appointmentsData) {\r\n    const parsedData = JSON.parse(appointmentsData);\r\n    const storedAppData = parsedData && parsedData[0]; // Safe access\r\n    \r\n    if (storedAppData) {\r\n      setApptData(storedAppData);\r\n      setDoctorName(storedAppData.doctorName);\r\n      setDoctorSpeciality(storedAppData.doctorSpeciality);\r\n      setTimeSlot(storedAppData.timeSlot);\r\n      setApptDate(storedAppData.apptDate);\r\n      setApptWindow(true); //show notification when new data is present\r\n    } else {\r\n      setApptData(null);\r\n      setApptWindow(false); //hide notification window if no appointment\r\n    } \r\n\r\n  } else{ //no appointmentData\r\n    setApptData(null);\r\n    setApptWindow(false); //hide notification window if no appointment\r\n  }\r\n\r\n}; \r\n\r\n\r\nuseEffect( () => {\r\n  //Initial loading when component is mounted\r\n   loadAppointmentData();\r\n  \r\n   const handleStorageChange = () => setStorageVersion((prev) => prev + 1);\r\n\r\n    //listen for storage changes from DoctorCardIC componenent\r\n   window.addEventListener(\"storage\", handleStorageChange);\r\n   return() => window.removeEventListener(\"storage\",handleStorageChange);\r\n}, [] ); //empty dependency array for 1 run in initial render\r\n\r\n\r\n// Re-run loadAppointmentData when storageVersion changes\r\nuseEffect(() => { \r\n   loadAppointmentData();\r\n}, [storageVersion]);\r\n\r\n//To handle appointment cancellation\r\nconst handleCancelAppointment = () => {\r\n  // Confirm cancellation with user\r\n  if (window.confirm(\"Are you sure you want to cancel this appointment?\")) {\r\n\r\n    // Get most recent appointments from localStorage\r\n    const appointmentsData = localStorage.getItem(\"appointments\");\r\n\r\n    if (appointmentsData) {\r\n      let appointments = JSON.parse(appointmentsData);\r\n      \r\n      // Filter out the current appointment\r\n      // Assuming appointments is an array and we're removing the first one\r\n      // You might need to modify this logic if you have multiple appointments\r\n      // and want to identify them differently (e.g., by ID)\r\n      appointments = appointments.filter((appt, index) => index !== 0);\r\n      \r\n      // Update localStorage\r\n      if (appointments.length > 0) {\r\n        localStorage.setItem(\"appointments\", JSON.stringify(appointments));\r\n      } else {\r\n        localStorage.removeItem(\"appointments\");\r\n      }\r\n\r\n      // Clear the state\r\n      setApptData('');\r\n      setDoctorName('');\r\n      setDoctorSpeciality('');\r\n      setApptDate('');\r\n      setTimeSlot('');\r\n      setApptWindow(false);\r\n      \r\n      // Optional: Show confirmation\r\n      loadAppointmentData();\r\n      alert(\"Appointment has been canceled successfully!\");\r\n    }\r\n  }\r\n}\r\n\r\nconsole.log(\"Rendering Notification.js\")\r\n\r\nreturn (\r\n<div>\r\n  {/* Render Child component */}\r\n  {children}\r\n\r\n {/*Render appointment notification if user is login and apptDetail is available*/} \r\n { isAppointmentsPage ? (\r\n <div className=\"appointments-page\" >\r\n <h1>Your Appointments</h1>\r\n {isLoggedIn && apptData ? (\r\n   <div className=\"appointment-details\" >\r\n     <h2>Upcoming Appointment</h2><br/>\r\n     <div className=\"apptDetails\">\r\n       <h4 className=\"lbl\"> Doctor: <span className=\"spanTxt2\">   {doctorName} </span></h4>\r\n       <h4 className=\"lbl\"> Speciality: <span className=\"spanTxt2\">   {doctorSpeciality} </span></h4>\r\n       <h4 className=\"lbl\"> Name: <span className=\"spanTxt2\">   {name} </span></h4>\r\n       <h4 className=\"lbl\"> Phone Number: <span className=\"spanTxt2\">   {phoneNum} </span></h4>\r\n       <h4 className=\"lbl\"> Date of Appointment: <span className=\"spanTxt2\">   {apptDate} </span></h4>\r\n       <h4 className=\"lbl\"> Time Slot: <span className=\"spanTxt2\">   {timeSlot} </span></h4>\r\n     </div>\r\n \r\n     <div className=\"appt-actions\" style={{marginTop: '20px', textAlign: 'center'}}>\r\n        <button className=\"cancel-btn\" onClick={handleCancelAppointment}> Cancel </button>\r\n     </div>\r\n   </div>\r\n   ):(\r\n    <p> No upcoming appointments </p>\r\n   )}\r\n   </div>\r\n\r\n):( \r\n   apptWindow && isLoggedIn && apptData && ( <>\r\n  <div className=\"notification-container\">\r\n    <h2> Appointment Details\r\n    <span> <button name=\"closeAppt\" className=\"close-btn\" onClick={handleApptWindow}>X </button>  </span> </h2> \r\n    <br/>\r\n   \r\n    <div className=\"apptDetails\">\r\n      <h4 className=\"lbl\"> Doctor:  <span className=\"spanTxt\"> &ensp; {doctorName} </span>   </h4>  \r\n      <h4 className=\"lbl\"> Speciality: <span className=\"spanTxt\"> &ensp; {doctorSpeciality} </span> </h4>\r\n      <h4 className=\"lbl\"> Name: <span className=\"spanTxt\"> &ensp; {name} </span></h4>\r\n      <h4 className=\"lbl\"> Phone Number: <span className=\"spanTxt\"> &ensp; {phoneNum}  </span></h4>\r\n      <h4 className=\"lbl\"> Date of Appointment: <span className=\"spanTxt\"> &ensp; {apptDate} </span></h4>\r\n      <h4 className=\"lbl\"> Time Slot: <span className=\"spanTxt\"> &ensp; {timeSlot} </span></h4>\r\n      \r\n    </div>\r\n\r\n    {/*Cancel Button*/}\r\n    <div className=\"appt-actions\" style={{marginTop: '20px', textAlign: 'center'}}>\r\n    <button className=\"cancel-btn\" onClick={handleCancelAppointment}> Cancel </button>\r\n    </div>\r\n\r\n  </div> \r\n    </> )\r\n ) };\r\n\r\n</div> \r\n );\r\n}\r\n\r\n//Export Notification component for use with other parts of the application\r\nexport default Notification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}