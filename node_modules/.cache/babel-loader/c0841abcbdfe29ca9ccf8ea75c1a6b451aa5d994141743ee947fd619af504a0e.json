{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lim_l\\\\Documents\\\\progamming\\\\032-grihf-frontend_capstone_starter_code\\\\src\\\\Components\\\\notification\\\\notification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./notification.css\";\nimport Navbar from '../navbar/navbar';\n\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  children\n}) => {\n  _s();\n  //state variable to keep track of keeping notification window open\n  const [apptWindow, setApptWindow] = useState(true);\n  const [isLoggedIn, setLogin] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNum, setPhoneNum] = useState('');\n  const [apptData, setApptData] = useState(''); //data object\n  const [doctorName, setDoctorName] = useState(''); //data object\n  const [doctorSpeciality, setDoctorSpeciality] = useState(''); //data object\n  const [apptDate, setApptDate] = useState(''); //data object\n  const [timeSlot, setTimeSlot] = useState(''); //data object\n\n  const handleApptWindow = e => {\n    setApptWindow(false);\n  };\n\n  // Do side-effects \n  useEffect(() => {\n    // Get stored data from sessionStorage & localStorage\n    const storedEmail = sessionStorage.getItem(\"email\");\n    const storedName = sessionStorage.getItem(\"name\");\n    const storedPhoneNum = sessionStorage.getItem(\"phoneNum\");\n    const appointmentsData = localStorage.getItem(\"appointments\");\n\n    //set the relevant state variables\n    if (storedEmail) {\n      setLogin(true);\n      setEmail(storedEmail);\n      setName(storedName);\n      setPhoneNum(storedPhoneNum);\n    }\n\n    // to ensure that there is appointmentData before applying JSON.parse()\n    if (appointmentsData) {\n      const parsedData = JSON.parse(appointmentsData);\n      const storedAppData = parsedData && parsedData[0]; // Safe access\n\n      if (storedAppData) {\n        setApptData(storedAppData);\n        setDoctorName(storedAppData.doctorName);\n        setDoctorSpeciality(storedAppData.doctorSpeciality);\n        setTimeSlot(storedAppData.timeSlot);\n        setApptDate(storedAppData.apptDate);\n      }\n    }\n  }, []); //empty dependency array to allow for 1 run in initial render\n\n  console.log(\"Rendering Notification.js\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [children, apptWindow && isLoggedIn && apptData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" Appointment Details\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              name: \"closeAppt\",\n              className: \"close-btn\",\n              onClick: handleApptWindow,\n              children: \"X \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 12\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 5\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"apptDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: [\" Doctor:  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"spanTxt\",\n              children: [\" \\u2002 \", doctorName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), \"   \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: [\" Speciality: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"spanTxt\",\n              children: [\" \\u2002 \", doctorSpeciality, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 36\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: [\" Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"spanTxt\",\n              children: [\" \\u2002 \", name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: [\" Phone Number: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"spanTxt\",\n              children: [\" \\u2002 \", phoneNum, \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: [\" Date of Appointment: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"spanTxt\",\n              children: [\" \\u2002 \", apptDate, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: [\" Time Slot: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"spanTxt\",\n              children: [\" \\u2002 \", timeSlot, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }, this), \" \"]\n    }, void 0, true), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 1\n  }, this);\n};\n\n//Export Notification component for use with other parts of the application\n_s(Notification, \"MBvUVUZRn8sQ78pfE7W8Ct0Wnv0=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Notification","children","_s","apptWindow","setApptWindow","isLoggedIn","setLogin","name","setName","email","setEmail","phoneNum","setPhoneNum","apptData","setApptData","doctorName","setDoctorName","doctorSpeciality","setDoctorSpeciality","apptDate","setApptDate","timeSlot","setTimeSlot","handleApptWindow","e","storedEmail","sessionStorage","getItem","storedName","storedPhoneNum","appointmentsData","localStorage","parsedData","JSON","parse","storedAppData","console","log","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","$RefreshReg$"],"sources":["C:/Users/lim_l/Documents/progamming/032-grihf-frontend_capstone_starter_code/src/Components/notification/notification.js"],"sourcesContent":["import React, { useState, useEffect, useRef }  from \"react\";\r\nimport \"./notification.css\";\r\nimport Navbar from '../navbar/navbar';\r\n\r\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/\r\n\r\n\r\nconst Notification = ({children}) => {\r\n\r\n  //state variable to keep track of keeping notification window open\r\n  const [apptWindow, setApptWindow] = useState(true); \r\n\r\n  const [isLoggedIn, setLogin ] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n  const [apptData, setApptData] = useState(''); //data object\r\n  const [doctorName, setDoctorName] = useState(''); //data object\r\n  const [doctorSpeciality, setDoctorSpeciality] = useState(''); //data object\r\n  const [apptDate, setApptDate] = useState(''); //data object\r\n  const [timeSlot, setTimeSlot] = useState(''); //data object\r\n  \r\n\r\nconst handleApptWindow = (e) => {\r\n    setApptWindow(false);\r\n}\r\n\r\n\r\n// Do side-effects \r\nuseEffect( ()=> {\r\n\r\n  // Get stored data from sessionStorage & localStorage\r\n  const storedEmail = sessionStorage.getItem(\"email\");\r\n  const storedName = sessionStorage.getItem(\"name\");\r\n  const storedPhoneNum= sessionStorage.getItem(\"phoneNum\");\r\n\r\n  const appointmentsData = localStorage.getItem(\"appointments\");\r\n\r\n\r\n   //set the relevant state variables\r\n  if( storedEmail) {\r\n    setLogin(true);\r\n    setEmail(storedEmail);\r\n    setName(storedName);\r\n    setPhoneNum(storedPhoneNum);\r\n  }\r\n\r\n\r\n  // to ensure that there is appointmentData before applying JSON.parse()\r\n  if(appointmentsData) {\r\n    const parsedData = JSON.parse(appointmentsData);\r\n    const storedAppData = parsedData && parsedData[0]; // Safe access\r\n    \r\n    if (storedAppData) {\r\n      setApptData(storedAppData);\r\n      setDoctorName(storedAppData.doctorName);\r\n      setDoctorSpeciality(storedAppData.doctorSpeciality);\r\n      setTimeSlot(storedAppData.timeSlot);\r\n      setApptDate(storedAppData.apptDate);\r\n    }\r\n  }\r\n\r\n}, []); //empty dependency array to allow for 1 run in initial render\r\n\r\n\r\nconsole.log(\"Rendering Notification.js\")\r\n\r\nreturn (\r\n<div>\r\n  {/* Render Child component */}\r\n  {children}\r\n\r\n {/*Render appointment notification if user is login and apptDetail is avaliable*/} \r\n { apptWindow && isLoggedIn && apptData && ( <>\r\n  <div className=\"notification-container\">\r\n    <h1> Appointment Details\r\n    <span> <button name=\"closeAppt\" className=\"close-btn\" onClick={handleApptWindow}>X </button>  </span> </h1> \r\n    <br/>\r\n   \r\n    <div className=\"apptDetails\">\r\n      <h4 class=\"lbl\"> Doctor:  <span class=\"spanTxt\"> &ensp; {doctorName} </span>   </h4>  \r\n      <h4 class=\"lbl\"> Speciality: <span class=\"spanTxt\"> &ensp; {doctorSpeciality} </span> </h4>\r\n      <h4 class=\"lbl\"> Name: <span class=\"spanTxt\"> &ensp; {name} </span></h4>\r\n      <h4 class=\"lbl\"> Phone Number: <span class=\"spanTxt\"> &ensp; {phoneNum}  </span></h4>\r\n      <h4 class=\"lbl\"> Date of Appointment: <span class=\"spanTxt\"> &ensp; {apptDate} </span></h4>\r\n      <h4 class=\"lbl\"> Time Slot: <span class=\"spanTxt\"> &ensp; {timeSlot} </span></h4>\r\n      \r\n    </div>\r\n\r\n  </div> </>\r\n  )};\r\n\r\n</div> \r\n );\r\n}\r\n\r\n//Export Notification component for use with other parts of the application\r\nexport default Notification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}