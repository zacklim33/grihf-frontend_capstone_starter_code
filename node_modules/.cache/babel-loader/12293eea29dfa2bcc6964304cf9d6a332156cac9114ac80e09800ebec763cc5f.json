{"ast":null,"code":"// Following code has been commented with appropriate comments for your reference. \n// Import necessary modules from React and other files\nimport React,{useEffect,useState}from\"react\";import{API_URL}from\"../../config\";import{useNavigate}from\"react-router-dom\";import\"./ProfileCard.css\";// Define a Function component called ProfileForm\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProfileForm=()=>{// Set up state variables using the useState hook\nconst[userDetails,setUserDetails]=useState({});const[updatedDetails,setUpdatedDetails]=useState({});const[editMode,setEditMode]=useState(false);// Access the navigation functionality from React Router\nconst navigate=useNavigate();// Use the useEffect hook to fetch user profile data when the component mounts or updates\nuseEffect(()=>{const authtoken=sessionStorage.getItem(\"auth-token\");if(!authtoken){navigate(\"/login\");}else{fetchUserProfile();}},[navigate]);// Function to fetch user profile data from the API\nconst fetchUserProfile=async()=>{try{const authtoken=sessionStorage.getItem(\"auth-token\");const email=sessionStorage.getItem(\"email\");// Get the email from session storage\nif(!authtoken){navigate(\"/login\");}else{const response=await fetch(`${API_URL}/api/auth/user`,{headers:{\"Authorization\":`Bearer ${authtoken}`,\"Email\":email// Add the email to the headers\n}});if(response.ok){const user=await response.json();setUserDetails(user);setUpdatedDetails(user);}else{// Handle error case\nthrow new Error(\"Failed to fetch user profile\");}}}catch(error){console.error(error);// Handle error case\n}};// Function to enable edit mode for profile details\nconst handleEdit=()=>{setEditMode(true);};// Function to update state when user inputs new data\nconst handleInputChange=e=>{setUpdatedDetails({...updatedDetails,[e.target.name]:e.target.value});};// Function to handle form submission when user saves changes\nconst handleSubmit=async e=>{e.preventDefault();try{const authtoken=sessionStorage.getItem(\"auth-token\");const email=sessionStorage.getItem(\"email\");// Get the email from session storage\nif(!authtoken||!email){navigate(\"/login\");return;}const payload={...updatedDetails};const response=await fetch(`${API_URL}/api/auth/user`,{method:\"PUT\",headers:{\"Authorization\":`Bearer ${authtoken}`,\"Content-Type\":\"application/json\",\"Email\":email},body:JSON.stringify(payload)});if(response.ok){// Update the user details in session storage\nsessionStorage.setItem(\"name\",updatedDetails.name);sessionStorage.setItem(\"phone\",updatedDetails.phone);setUserDetails(updatedDetails);setEditMode(false);// Display success message to the user\nalert(`Profile Updated Successfully!`);navigate(\"/\");}else{// Handle error case\nthrow new Error(\"Failed to update profile\");}}catch(error){console.error(error);// Handle error case\n}};// Render the profile form with different sections based on edit mode\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"profile-container\",children:editMode?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Email\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:userDetails.email,disabled:true// Disable the email field\n})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\" Name\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:updatedDetails.name,onChange:handleInputChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\" Phone  \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone\",value:updatedDetails.phone,onChange:handleInputChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"profile-details\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome, \",userDetails.name]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",/*#__PURE__*/_jsx(\"b\",{children:\"Your email: \"}),\" \",userDetails.email,\" \"]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",/*#__PURE__*/_jsx(\"b\",{children:\"Your Phone number: \"}),\" \",userDetails.phone,\" \"]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEdit,children:\"Edit\"})]})});};// Export the ProfileForm component as the default export\nexport default ProfileForm;","map":{"version":3,"names":["React","useEffect","useState","API_URL","useNavigate","jsx","_jsx","jsxs","_jsxs","ProfileForm","userDetails","setUserDetails","updatedDetails","setUpdatedDetails","editMode","setEditMode","navigate","authtoken","sessionStorage","getItem","fetchUserProfile","email","response","fetch","headers","ok","user","json","Error","error","console","handleEdit","handleInputChange","e","target","name","value","handleSubmit","preventDefault","payload","method","body","JSON","stringify","setItem","phone","alert","className","children","onSubmit","type","disabled","onChange","onClick"],"sources":["C:/Users/lim_l/Documents/progamming/032-grihf-frontend_capstone_starter_code/src/Components/ProfileCard/ProfileCard.js"],"sourcesContent":["// Following code has been commented with appropriate comments for your reference. \r\n// Import necessary modules from React and other files\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { API_URL } from \"../../config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./ProfileCard.css\"\r\n\r\n// Define a Function component called ProfileForm\r\nconst ProfileForm = () => {\r\n  // Set up state variables using the useState hook\r\n  const [userDetails, setUserDetails] = useState({});\r\n  const [updatedDetails, setUpdatedDetails] = useState({});\r\n  const [editMode, setEditMode] = useState(false);\r\n  \r\n  // Access the navigation functionality from React Router\r\n  const navigate = useNavigate();\r\n  \r\n  // Use the useEffect hook to fetch user profile data when the component mounts or updates\r\n  useEffect(() => {\r\n    const authtoken = sessionStorage.getItem(\"auth-token\");\r\n    if (!authtoken) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchUserProfile();\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Function to fetch user profile data from the API\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const authtoken = sessionStorage.getItem(\"auth-token\");\r\n      const email = sessionStorage.getItem(\"email\"); // Get the email from session storage\r\n\r\n      if (!authtoken) {\r\n        navigate(\"/login\");\r\n      } else {\r\n        const response = await fetch(`${API_URL}/api/auth/user`, {\r\n          headers: {\r\n            \"Authorization\": `Bearer ${authtoken}`,\r\n            \"Email\": email, // Add the email to the headers\r\n          },\r\n        });\r\n        if (response.ok) {\r\n          const user = await response.json();\r\n          setUserDetails(user);\r\n          setUpdatedDetails(user);\r\n        } else {\r\n          // Handle error case\r\n          throw new Error(\"Failed to fetch user profile\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle error case\r\n    }\r\n  };\r\n\r\n  // Function to enable edit mode for profile details\r\n  const handleEdit = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  // Function to update state when user inputs new data\r\n  const handleInputChange = (e) => {\r\n    setUpdatedDetails({\r\n      ...updatedDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Function to handle form submission when user saves changes\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const authtoken = sessionStorage.getItem(\"auth-token\");\r\n      const email = sessionStorage.getItem(\"email\"); // Get the email from session storage\r\n\r\n      if (!authtoken || !email) {\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      const payload = { ...updatedDetails };\r\n      const response = await fetch(`${API_URL}/api/auth/user`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${authtoken}`,\r\n          \"Content-Type\": \"application/json\",\r\n          \"Email\": email,\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Update the user details in session storage\r\n        sessionStorage.setItem(\"name\", updatedDetails.name);\r\n        sessionStorage.setItem(\"phone\", updatedDetails.phone);\r\n\r\n        setUserDetails(updatedDetails);\r\n        setEditMode(false);\r\n        // Display success message to the user\r\n        alert(`Profile Updated Successfully!`);\r\n        navigate(\"/\");\r\n      } else {\r\n        // Handle error case\r\n        throw new Error(\"Failed to update profile\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle error case\r\n    }\r\n  };\r\n\r\n  // Render the profile form with different sections based on edit mode\r\n  return (\r\n    <div className=\"profile-container\">\r\n      {editMode ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Email\r\n            <input  type=\"email\" name=\"email\" value={userDetails.email} \r\n              disabled // Disable the email field\r\n            />\r\n          </label>\r\n\r\n          <label> Name\r\n         <input type=\"text\" name=\"name\"\r\n           value={updatedDetails.name} onChange={handleInputChange} />\r\n       </label>\r\n\r\n       <label> Phone  <input type=\"text\" name=\"phone\" \r\n           value={updatedDetails.phone} onChange={handleInputChange} />\r\n       </label>\r\n       \r\n          <button type=\"submit\">Save</button>\r\n        </form>\r\n      ) : (\r\n        <div className=\"profile-details\">\r\n          <h1>Welcome, {userDetails.name}</h1> <br/>\r\n          <p> <b>Your email: </b> {userDetails.email} </p> <br/>\r\n          <p> <b>Your Phone number: </b> {userDetails.phone} </p> <br/>          \r\n          {/* Implement code to display and allow editing of phone and email similar to above */}\r\n          <button onClick={handleEdit}>Edit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export the ProfileForm component as the default export\r\nexport default ProfileForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}