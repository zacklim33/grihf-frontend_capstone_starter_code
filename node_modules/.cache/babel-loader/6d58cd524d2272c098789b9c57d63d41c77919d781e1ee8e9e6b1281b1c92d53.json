{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import\"./notification.css\";import Navbar from'../navbar/navbar';/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Notification=_ref=>{let{children}=_ref;//state variable to keep track of keeping notification window open\nconst[apptWindow,setApptWindow]=useState(true);const[isLoggedIn,setLogin]=useState(false);const[name,setName]=useState('');const[email,setEmail]=useState('');const[phoneNum,setPhoneNum]=useState('');const[apptData,setApptData]=useState('');//data object\nconst[doctorName,setDoctorName]=useState('');//data object\nconst[doctorSpeciality,setDoctorSpeciality]=useState('');//data object\nconst[apptDate,setApptDate]=useState('');//data object\nconst[timeSlot,setTimeSlot]=useState('');//data object\nconst handleApptWindow=e=>{setApptWindow(false);};// Do side-effects \nuseEffect(()=>{// Get stored data from sessionStorage & localStorage\nconst storedEmail=sessionStorage.getItem(\"email\");const storedName=sessionStorage.getItem(\"name\");const storedPhoneNum=sessionStorage.getItem(\"phoneNum\");const appointmentsData=localStorage.getItem(\"appointments\");const storedDoctorName=appointmentsData.doctorName;const storedDoctorSpeciality=appointmentsData.doctorSpeciality;const storedTimeSlot=appointmentsData.timeSlot;const storedApptDate=appointmentsData.apptDate;//set the relevant state variables\nif(storedEmail){setLogin(true);setEmail(storedEmail);setName(storedName);setPhoneNum(storedPhoneNum);}// to ensure that there is appointmentData before applying JSON.parse()\nif(appointmentsData){const parsedData=JSON.parse(appointmentsData);const storedAppData=parsedData&&parsedData[0];// Safe access\nif(storedAppData){setApptData(storedAppData);setDoctorName(storedDoctorName);setDoctorSpeciality(storedDoctorSpeciality);setTimeSlot(storedTimeSlot);setApptDate(storedApptDate);}}},[]);//empty dependency array to allow for 1 run in initial render\nconsole.log(\"Rendering Notification.js\");return/*#__PURE__*/_jsxs(\"div\",{children:[children,apptWindow&&isLoggedIn&&apptData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notification-container\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" Appointment Details\",/*#__PURE__*/_jsxs(\"span\",{children:[\" \",/*#__PURE__*/_jsx(\"button\",{name:\"closeAppt\",className:\"close-btn\",onClick:handleApptWindow,children:\"X \"}),\"  \"]}),\" \"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"apptDetails\",children:[/*#__PURE__*/_jsxs(\"h4\",{class:\"lbl\",children:[\" Doctor:  \",/*#__PURE__*/_jsxs(\"span\",{class:\"spanTxt\",children:[\" \\u2002 \",doctorName,\" \"]}),\"   \"]}),/*#__PURE__*/_jsxs(\"h4\",{class:\"lbl\",children:[\" Speciality: \",/*#__PURE__*/_jsxs(\"span\",{class:\"spanTxt\",children:[\" \\u2002 \",doctorSpeciality,\" \"]}),\" \"]}),/*#__PURE__*/_jsxs(\"h4\",{class:\"lbl\",children:[\" Name: \",/*#__PURE__*/_jsxs(\"span\",{class:\"spanTxt\",children:[\" \\u2002 \",name,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{class:\"lbl\",children:[\" Phone Number: \",/*#__PURE__*/_jsxs(\"span\",{class:\"spanTxt\",children:[\" \\u2002 \",phoneNum,\"  \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{class:\"lbl\",children:[\" Date of Appointment: \",/*#__PURE__*/_jsxs(\"span\",{class:\"spanTxt\",children:[\" \\u2002 \",apptDate,\" \"]})]}),/*#__PURE__*/_jsxs(\"h4\",{class:\"lbl\",children:[\" Time Slot: \",/*#__PURE__*/_jsxs(\"span\",{class:\"spanTxt\",children:[\" \\u2002 \",timeSlot,\" \"]})]})]})]}),\" \"]}),\";\"]});};//Export Notification component for use with other parts of the application\nexport default Notification;","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Notification","_ref","children","apptWindow","setApptWindow","isLoggedIn","setLogin","name","setName","email","setEmail","phoneNum","setPhoneNum","apptData","setApptData","doctorName","setDoctorName","doctorSpeciality","setDoctorSpeciality","apptDate","setApptDate","timeSlot","setTimeSlot","handleApptWindow","e","storedEmail","sessionStorage","getItem","storedName","storedPhoneNum","appointmentsData","localStorage","storedDoctorName","storedDoctorSpeciality","storedTimeSlot","storedApptDate","parsedData","JSON","parse","storedAppData","console","log","className","onClick","class"],"sources":["C:/Users/lim_l/Documents/progamming/032-grihf-frontend_capstone_starter_code/src/Components/notification/notification.js"],"sourcesContent":["import React, { useState, useEffect, useRef }  from \"react\";\r\nimport \"./notification.css\";\r\nimport Navbar from '../navbar/navbar';\r\n\r\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/\r\n\r\n\r\nconst Notification = ({children}) => {\r\n\r\n  //state variable to keep track of keeping notification window open\r\n  const [apptWindow, setApptWindow] = useState(true); \r\n\r\n  const [isLoggedIn, setLogin ] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n  const [apptData, setApptData] = useState(''); //data object\r\n  const [doctorName, setDoctorName] = useState(''); //data object\r\n  const [doctorSpeciality, setDoctorSpeciality] = useState(''); //data object\r\n  const [apptDate, setApptDate] = useState(''); //data object\r\n  const [timeSlot, setTimeSlot] = useState(''); //data object\r\n  \r\n\r\nconst handleApptWindow = (e) => {\r\n    setApptWindow(false);\r\n}\r\n\r\n\r\n// Do side-effects \r\nuseEffect( ()=> {\r\n\r\n  // Get stored data from sessionStorage & localStorage\r\n  const storedEmail = sessionStorage.getItem(\"email\");\r\n  const storedName = sessionStorage.getItem(\"name\");\r\n  const storedPhoneNum= sessionStorage.getItem(\"phoneNum\");\r\n\r\n  const appointmentsData = localStorage.getItem(\"appointments\");\r\n  const storedDoctorName = appointmentsData.doctorName;\r\n  const storedDoctorSpeciality = appointmentsData.doctorSpeciality;\r\n  const storedTimeSlot = appointmentsData.timeSlot;\r\n  const storedApptDate = appointmentsData.apptDate; \r\n  \r\n   //set the relevant state variables\r\n  if( storedEmail) {\r\n    setLogin(true);\r\n    setEmail(storedEmail);\r\n    setName(storedName);\r\n    setPhoneNum(storedPhoneNum);\r\n  }\r\n\r\n\r\n  // to ensure that there is appointmentData before applying JSON.parse()\r\n  if(appointmentsData) {\r\n    \r\n    const parsedData = JSON.parse(appointmentsData);\r\n    const storedAppData = parsedData && parsedData[0]; // Safe access\r\n\r\n    if (storedAppData) {\r\n      setApptData(storedAppData);\r\n      setDoctorName(storedDoctorName);\r\n      setDoctorSpeciality(storedDoctorSpeciality);\r\n      setTimeSlot(storedTimeSlot);\r\n      setApptDate(storedApptDate);\r\n    }\r\n  }\r\n\r\n}, []); //empty dependency array to allow for 1 run in initial render\r\n\r\n\r\nconsole.log(\"Rendering Notification.js\")\r\n\r\nreturn (\r\n<div>\r\n  {/* Render Child component */}\r\n  {children}\r\n\r\n {/*Render appointment notification if user is login and apptDetail is avaliable*/} \r\n { apptWindow && isLoggedIn && apptData && ( <>\r\n  <div className=\"notification-container\">\r\n    <h1> Appointment Details\r\n    <span> <button name=\"closeAppt\" className=\"close-btn\" onClick={handleApptWindow}>X </button>  </span> </h1> \r\n    <br/>\r\n   \r\n    <div className=\"apptDetails\">\r\n      <h4 class=\"lbl\"> Doctor:  <span class=\"spanTxt\"> &ensp; {doctorName} </span>   </h4>  \r\n      <h4 class=\"lbl\"> Speciality: <span class=\"spanTxt\"> &ensp; {doctorSpeciality} </span> </h4>\r\n      <h4 class=\"lbl\"> Name: <span class=\"spanTxt\"> &ensp; {name} </span></h4>\r\n      <h4 class=\"lbl\"> Phone Number: <span class=\"spanTxt\"> &ensp; {phoneNum}  </span></h4>\r\n      <h4 class=\"lbl\"> Date of Appointment: <span class=\"spanTxt\"> &ensp; {apptDate} </span></h4>\r\n      <h4 class=\"lbl\"> Time Slot: <span class=\"spanTxt\"> &ensp; {timeSlot} </span></h4>\r\n      \r\n    </div>\r\n\r\n  </div> </>\r\n  )};\r\n\r\n</div> \r\n );\r\n}\r\n\r\n//Export Notification component for use with other parts of the application\r\nexport default Notification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}