{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lim_l\\\\Documents\\\\progamming\\\\032-grihf-frontend_capstone_starter_code\\\\src\\\\Components\\\\notification\\\\notification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./notification.css\";\nimport Navbar from '../navbar/navbar';\n\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  children\n}) => {\n  _s();\n  var _doctorData, _doctorData2;\n  //state variable to keep track of keeping notification window open\n  const [apptWindow, setApptWindow] = useState('');\n  const [isLoggedIn, setLogin] = useState(false);\n  const [name, setName] = useState('');\n  const [phoneNum, setPhoneNum] = useState('');\n  const [doctorName, setDoctorName] = useState(null); //data object\n  const [apptData, setApptData] = useState(null); //data object\n\n  const eventApptWindow = e => {\n    setApptWindow(e.target.value);\n  };\n\n  // Do side-effects \n  useEffect(() => {\n    // Get stored data from sessionStorage & localStorage\n    const storedAppData = JSON.parse(localStorage.getItem(\"appointments\"));\n    const storedName = sessionStorage.getItem(storedAppData === null || storedAppData === void 0 ? void 0 : storedAppData.name);\n    const storedPhoneNum = sessionStorage.getItem(storedAppData === null || storedAppData === void 0 ? void 0 : storedAppData.phoneNum);\n    const storedDoctorName = JSON.parse(localStorage.getItem(storedAppData === null || storedAppData === void 0 ? void 0 : storedAppData.doctorName));\n    const storedDoctorSpeciality = JSON.parse(localStorage.getItem(storedAppData === null || storedAppData === void 0 ? void 0 : storedAppData.doctorSpeciality));\n\n    //set the relevant state variables\n    if (storedName) {\n      setLogin(true);\n      setName(storedName);\n      setPhoneNum(storedPhoneNum);\n    }\n    if (storedDoctorData) setDoctorData(storedDoctorData);\n    if (storedAppData) setApptData(storedAppData);\n  }, []); //empty dependency array for 1 run after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [children, isLoggedIn && apptData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Appointment Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"apptDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Doctor: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this), \" \", (_doctorData = doctorData) === null || _doctorData === void 0 ? void 0 : _doctorData.name, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Speciality: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), \" \", (_doctorData2 = doctorData) === null || _doctorData2 === void 0 ? void 0 : _doctorData2.specialty, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), \" \", name, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Phone Number: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), \" \", phoneNum, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Date of Appointment: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), \" \", apptData === null || apptData === void 0 ? void 0 : apptData.apptDate, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Time Slot: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), \" \", apptData === null || apptData === void 0 ? void 0 : apptData.timeSlot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }, this), \" \"]\n    }, void 0, true), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 1\n  }, this);\n};\n\n//Export Notification component for use with other parts of the application\n_s(Notification, \"k3PVakQ5IS2S4H4kLNZs3L+kIIg=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Notification","children","_s","_doctorData","_doctorData2","apptWindow","setApptWindow","isLoggedIn","setLogin","name","setName","phoneNum","setPhoneNum","doctorName","setDoctorName","apptData","setApptData","eventApptWindow","e","target","value","storedAppData","JSON","parse","localStorage","getItem","storedName","sessionStorage","storedPhoneNum","storedDoctorName","storedDoctorSpeciality","doctorSpeciality","storedDoctorData","setDoctorData","className","fileName","_jsxFileName","lineNumber","columnNumber","class","doctorData","specialty","apptDate","timeSlot","_c","$RefreshReg$"],"sources":["C:/Users/lim_l/Documents/progamming/032-grihf-frontend_capstone_starter_code/src/Components/notification/notification.js"],"sourcesContent":["import React, { useState, useEffect, useRef }  from \"react\";\r\nimport \"./notification.css\";\r\nimport Navbar from '../navbar/navbar';\r\n\r\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/\r\n\r\n\r\nconst Notification = ({children}) => {\r\n\r\n  //state variable to keep track of keeping notification window open\r\n  const [apptWindow, setApptWindow] = useState(''); \r\n\r\n  const [isLoggedIn, setLogin ] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n  const [doctorName, setDoctorName] = useState(null); //data object\r\n  const [apptData, setApptData] = useState(null); //data object\r\n\r\n\r\nconst eventApptWindow = (e) => {\r\n    setApptWindow(e.target.value);\r\n}\r\n\r\n\r\n// Do side-effects \r\nuseEffect( ()=> {\r\n\r\n  // Get stored data from sessionStorage & localStorage\r\n  const storedAppData = JSON.parse(localStorage.getItem(\"appointments\"));\r\n  const storedName = sessionStorage.getItem(storedAppData?.name);\r\n  const storedPhoneNum= sessionStorage.getItem(storedAppData?.phoneNum);\r\n  const storedDoctorName = JSON.parse(localStorage.getItem(storedAppData?.doctorName));\r\n  const storedDoctorSpeciality = JSON.parse(localStorage.getItem(storedAppData?.doctorSpeciality));\r\n\r\n  //set the relevant state variables\r\n  if( storedName) {\r\n    setLogin(true);\r\n    setName(storedName);\r\n    setPhoneNum(storedPhoneNum);\r\n  }\r\n\r\n  if(storedDoctorData) setDoctorData(storedDoctorData);\r\n  if(storedAppData) setApptData(storedAppData);\r\n\r\n}, []); //empty dependency array for 1 run after initial render\r\n\r\n\r\nreturn (\r\n<div>\r\n  {/* Render Child component */}\r\n  {children}\r\n\r\n {/*Render appointment notification if user is login and apptDetail is avaliable*/} \r\n { isLoggedIn && apptData && ( <>\r\n  <div className=\"notification-container\">\r\n    <h1> Appointment Details</h1> <br/>\r\n\r\n    <div className=\"apptDetails\">\r\n      <h4 class=\"lbl\"> Doctor: </h4> {doctorData?.name} \r\n      <h4 class=\"lbl\"> Speciality: </h4> {doctorData?.specialty} \r\n      <h4 class=\"lbl\"> Name: </h4> {name}\r\n      <h4 class=\"lbl\"> Phone Number: </h4> {phoneNum} \r\n      <h4 class=\"lbl\"> Date of Appointment: </h4> {apptData?.apptDate}\r\n      <h4 class=\"lbl\"> Time Slot: </h4> {apptData?.timeSlot} \r\n    </div>\r\n\r\n  </div> </>\r\n  )};\r\n\r\n</div> \r\n );\r\n}\r\n\r\n//Export Notification component for use with other parts of the application\r\nexport default Notification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}