{"ast":null,"code":"import React,{useState,useEffect}from'react';//Import React library for UI components\nimport{Link,useNavigate}from\"react-router-dom\";// import Link component for navigation using react-router-dom\nimport\"./styles-login.css\";//import css styles\nimport\"./styles-login_responsive.css\";//import responsive css styles\nimport{API_URL}from'../../config';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{// State variables for email and password\nconst[password,setPassword]=useState(\"\");const[email,setEmail]=useState('');const[name,setName]=useState('');const[showerr,setShowerr]=useState({});// Object to show error messages\n// Get navigation function from react-router-dom\nconst navigate=useNavigate();// Check if user is already authenticated, then redirect to home page\nuseEffect(()=>{if(sessionStorage.getItem(\"auth-token\"))navigate(\"/\");},[]);// Function to handle login form submission\nconst login=async e=>{e.preventDefault();setShowerr({});//clear all errors initially\n// Send a POST request to the login API endpoint\nconst res=await fetch(`${API_URL}/api/auth/login`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})});// Parse the response JSON\nconst json=await res.json();if(json.authtoken){// If authentication token is received, store it in session storage\nalert(JSON.stringify(json));sessionStorage.setItem('auth-token',json.authtoken);sessionStorage.setItem('email',json.email);sessionStorage.setItem('name',json.name);sessionStorage.setItem('phoneNum',json.phoneNum);alert(\"Successful login:\"+json.name+\" \"+json.email+\" \"+json.phoneNum);// Redirect to home page and reload the window\nnavigate('/');window.location.reload();}else{// Clear previous errors\nsetShowerr({});if(json.errors){/* const jsonString = JSON.stringify(json.errors);\r\n        alert(\"some errors:\" + jsonString); */const newErrors={};json.errors.forEach(error=>{// Assuming your API returns errors with a 'path' property\n// indicating which field has the error. Adjust if needed.\nif(error.path==='email'||error.param==='email'){newErrors.email=error.msg;}else if(error.path==='password'||error.param==='password'){newErrors.password=error.msg;}else{// Handle other errors or generic errors\nnewErrors.general=error.msg;// Or display a general alert\n}});setShowerr(newErrors);}else if(json.error){/*\r\n        const jsonString = JSON.stringify(json.errors);\r\n        alert(\"1x errors:\" + jsonString); \r\n        alert(\"single error\");\r\n        alert(toString(json.error)); */setShowerr({general:json.error});// General error\n}}};return/*#__PURE__*/_jsx(\"section\",{className:\"hero-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"signin-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"signin-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Sign In \"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" A new user? \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\" Sign up here\"}),\" \"]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:login,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"label\",{htmlfor:\"email\",children:\" Email \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{value:email,onChange:e=>setEmail(e.target.value),type:\"text\",id:\"email\",name:\"email\",placeholder:\"Enter your email\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),showerr.email&&/*#__PURE__*/_jsxs(\"div\",{className:\"err\",children:[showerr.email,\" \"]}),/*#__PURE__*/_jsx(\"label\",{htmlfor:\"password\",children:\" Password \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{value:password,onChange:e=>setPassword(e.target.value),type:\"password\",id:\"password\",name:\"password\",placeholder:\"Enter your password\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),showerr.password&&/*#__PURE__*/_jsxs(\"div\",{className:\"err\",children:[\" \",showerr.password,\" \"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{type:\"reset\",children:\"Reset\"})]})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","API_URL","jsx","_jsx","jsxs","_jsxs","Login","password","setPassword","email","setEmail","name","setName","showerr","setShowerr","navigate","sessionStorage","getItem","login","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","json","authtoken","alert","setItem","phoneNum","window","location","reload","errors","newErrors","forEach","error","path","param","msg","general","className","children","to","onSubmit","htmlfor","value","onChange","target","type","id","placeholder"],"sources":["C:/Users/lim_l/Documents/progamming/032-grihf-frontend_capstone_starter_code/src/Components/login/login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; //Import React library for UI components\r\nimport { Link, useNavigate } from \"react-router-dom\"; // import Link component for navigation using react-router-dom\r\nimport \"./styles-login.css\"; //import css styles\r\nimport \"./styles-login_responsive.css\"; //import responsive css styles\r\nimport { API_URL } from '../../config';\r\n\r\nconst Login = () => {\r\n\r\n  // State variables for email and password\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [showerr, setShowerr] = useState({}); // Object to show error messages\r\n  \r\n  // Get navigation function from react-router-dom\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is already authenticated, then redirect to home page\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"auth-token\"))  navigate(\"/\");\r\n  }, []);\r\n\r\n  // Function to handle login form submission\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setShowerr({}) ; //clear all errors initially\r\n    \r\n    // Send a POST request to the login API endpoint\r\n    const res = await fetch(`${API_URL}/api/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    // Parse the response JSON\r\n    const json = await res.json();\r\n\r\n    if (json.authtoken) {\r\n      // If authentication token is received, store it in session storage\r\n      alert(JSON.stringify(json));\r\n      sessionStorage.setItem('auth-token', json.authtoken);\r\n      sessionStorage.setItem('email', json.email);\r\n      sessionStorage.setItem('name', json.name);\r\n      sessionStorage.setItem('phoneNum', json.phoneNum);\r\n\r\n      alert(\"Successful login:\" + json.name + \" \" + json.email + \" \" + json.phoneNum);\r\n\r\n      // Redirect to home page and reload the window\r\n      navigate('/');\r\n      window.location.reload();\r\n\r\n    } else {\r\n\r\n      // Clear previous errors\r\n      setShowerr({});\r\n\r\n      if (json.errors) {\r\n        \r\n        /* const jsonString = JSON.stringify(json.errors);\r\n        alert(\"some errors:\" + jsonString); */\r\n\r\n        const newErrors = {};\r\n        json.errors.forEach(error => {\r\n          // Assuming your API returns errors with a 'path' property\r\n          // indicating which field has the error. Adjust if needed.\r\n          if (error.path === 'email' || error.param === 'email') {\r\n            newErrors.email = error.msg;\r\n          } else if (error.path === 'password' || error.param === 'password') {\r\n            newErrors.password = error.msg;\r\n          } else {\r\n            // Handle other errors or generic errors\r\n            newErrors.general = error.msg; // Or display a general alert\r\n          }\r\n        });\r\n        setShowerr(newErrors);\r\n\r\n      } else if (json.error) {\r\n\r\n        /*\r\n        const jsonString = JSON.stringify(json.errors);\r\n        alert(\"1x errors:\" + jsonString); \r\n        alert(\"single error\");\r\n        alert(toString(json.error)); */\r\n\r\n          setShowerr({ general: json.error }); // General error\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\nreturn (\r\n<section className=\"hero-section\">\r\n\r\n  <div className=\"signin-container\">\r\n  <div className=\"signin-header\">\r\n    <h1> Sign In </h1>\r\n    <span> A new user? <Link to=\"/signup\"> Sign up here</Link> </span>\r\n  </div>\r\n  \r\n  <form onSubmit={login}> \r\n    <div className=\"form-group\">\r\n      <div className=\"column\">\r\n          <label htmlfor = \"email\" > Email </label><br/>\r\n          <input value={email} onChange={(e)=> setEmail(e.target.value)}\r\n            type=\"text\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" /> <br/><br/> \r\n          {showerr.email && <div className=\"err\" >{showerr.email} </div> }\r\n\r\n          <label htmlfor =\"password\" > Password </label><br/>\r\n          <input value={password} onChange={(e)=> setPassword(e.target.value)}\r\n            type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\"/> <br/><br/>\r\n           {showerr.password && <div className=\"err\"> {showerr.password} </div> }\r\n\r\n      </div>\r\n    </div>\r\n\r\n      <div className=\"button-container\">\r\n          <button type=\"submit\">Login</button>\r\n          <button type=\"reset\">Reset</button>\r\n      </div>\r\n  </form>\r\n\r\n\r\n  </div>\r\n</section>\r\n\r\n\r\n );\r\n}\r\n\r\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}