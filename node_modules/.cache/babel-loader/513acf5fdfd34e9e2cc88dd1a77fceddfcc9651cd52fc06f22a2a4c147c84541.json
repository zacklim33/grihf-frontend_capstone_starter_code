{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lim_l\\\\Documents\\\\progamming\\\\032-grihf-frontend_capstone_starter_code\\\\src\\\\Components\\\\notification\\\\notification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./notification.css\";\nimport Navbar from '../navbar/navbar';\n\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  children\n}) => {\n  _s();\n  //state variable to keep track of keeping notification window open\n  const [apptWindow, setApptWindow] = useState('');\n  const [isLoggedIn, setLogin] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNum, setPhoneNum] = useState('');\n  const [apptData, setApptData] = useState(''); //data object\n  const [doctorName, setDoctorName] = useState(''); //data object\n  const [doctorSpeciality, setDoctorSpeciality] = useState(''); //data object\n  const [apptDate, setApptDate] = useState(''); //data object\n  const [timeSlot, setTimeSlot] = useState(''); //data object\n\n  const eventApptWindow = e => {\n    setApptWindow(e.target.value);\n  };\n\n  // Do side-effects \n  useEffect(() => {\n    // Get stored data from sessionStorage & localStorage\n    const storedEmail = sessionStorage.getItem(\"email\");\n    const storedName = sessionStorage.getItem(\"name\");\n    const storedPhoneNum = sessionStorage.getItem(\"phoneNum\");\n    const storedAppData = JSON.parse(localStorage.getItem(\"appointments\"))[0];\n    const storedDoctorName = storedAppData.doctorName;\n    const storedDoctorSpeciality = storedAppData.doctorSpeciality;\n    const storedTimeSlot = storedAppData.timeSlot;\n    const storedApptDate = storedAppData.apptDate;\n    alert(JSON.stringify(storedAppData));\n\n    //set the relevant state variables\n    if (storedEmail) {\n      setLogin(true);\n      setEmail(storedEmail);\n      setName(storedName);\n      setPhoneNum(storedPhoneNum);\n    }\n    setApptData(storedAppData);\n    alert(\"isLoggedIn \" + isLoggedIn);\n    if (storedAppData) {\n      setDoctorName(storedDoctorName);\n      setDoctorSpeciality(storedDoctorSpeciality);\n      setTimeSlot(storedTimeSlot);\n      setApptDate(storedApptDate);\n    }\n  }, []); //empty dependency array for 1 run after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [children, \"isLoggedIn: \", isLoggedIn, \"; \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }, this), \"name: \", doctorName, isLoggedIn && apptData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Appointment Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"apptDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Doctor: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), \" \", doctorName, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Speciality: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), \" \", doctorSpeciality, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this), \" \", name, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Phone Number: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this), \" \", phoneNum, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Date of Appointment: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), \" \", apptDate, /*#__PURE__*/_jsxDEV(\"h4\", {\n            class: \"lbl\",\n            children: \" Time Slot: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), \" \", timeSlot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }, this), \" \"]\n    }, void 0, true), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 1\n  }, this);\n};\n\n//Export Notification component for use with other parts of the application\n_s(Notification, \"3f2afnCB/PdX3BxsVbhdpfYJG0I=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Notification","children","_s","apptWindow","setApptWindow","isLoggedIn","setLogin","name","setName","email","setEmail","phoneNum","setPhoneNum","apptData","setApptData","doctorName","setDoctorName","doctorSpeciality","setDoctorSpeciality","apptDate","setApptDate","timeSlot","setTimeSlot","eventApptWindow","e","target","value","storedEmail","sessionStorage","getItem","storedName","storedPhoneNum","storedAppData","JSON","parse","localStorage","storedDoctorName","storedDoctorSpeciality","storedTimeSlot","storedApptDate","alert","stringify","fileName","_jsxFileName","lineNumber","columnNumber","className","class","_c","$RefreshReg$"],"sources":["C:/Users/lim_l/Documents/progamming/032-grihf-frontend_capstone_starter_code/src/Components/notification/notification.js"],"sourcesContent":["import React, { useState, useEffect, useRef }  from \"react\";\r\nimport \"./notification.css\";\r\nimport Navbar from '../navbar/navbar';\r\n\r\n/* To implement a notification window to remind user of the \r\n   booked/canceled appointment details\r\n*/\r\n\r\n\r\nconst Notification = ({children}) => {\r\n\r\n  //state variable to keep track of keeping notification window open\r\n  const [apptWindow, setApptWindow] = useState(''); \r\n\r\n  const [isLoggedIn, setLogin ] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n  const [apptData, setApptData] = useState(''); //data object\r\n  const [doctorName, setDoctorName] = useState(''); //data object\r\n  const [doctorSpeciality, setDoctorSpeciality] = useState(''); //data object\r\n  const [apptDate, setApptDate] = useState(''); //data object\r\n  const [timeSlot, setTimeSlot] = useState(''); //data object\r\n  \r\n\r\nconst eventApptWindow = (e) => {\r\n    setApptWindow(e.target.value);\r\n}\r\n\r\n\r\n// Do side-effects \r\nuseEffect( ()=> {\r\n\r\n  // Get stored data from sessionStorage & localStorage\r\n  const storedEmail = sessionStorage.getItem(\"email\");\r\n  const storedName = sessionStorage.getItem(\"name\");\r\n  const storedPhoneNum= sessionStorage.getItem(\"phoneNum\");\r\n\r\n  const storedAppData = JSON.parse(localStorage.getItem(\"appointments\"))[0];\r\n  const storedDoctorName = storedAppData.doctorName;\r\n  const storedDoctorSpeciality = storedAppData.doctorSpeciality;\r\n  const storedTimeSlot = storedAppData.timeSlot;\r\n  const storedApptDate = storedAppData.apptDate;\r\n  \r\n  alert(JSON.stringify(storedAppData));\r\n  \r\n   //set the relevant state variables\r\n  if( storedEmail) {\r\n    setLogin(true);\r\n    setEmail(storedEmail);\r\n    setName(storedName);\r\n    setPhoneNum(storedPhoneNum);\r\n  }\r\n\r\n  setApptData(storedAppData);\r\n  alert(\"isLoggedIn \" + isLoggedIn);\r\n\r\n  if(storedAppData) {\r\n    setDoctorName(storedDoctorName);\r\n    setDoctorSpeciality(storedDoctorSpeciality);\r\n    setTimeSlot(storedTimeSlot);\r\n    setApptDate(storedApptDate);\r\n  }\r\n\r\n}, []); //empty dependency array for 1 run after initial render\r\n\r\n\r\nreturn (\r\n<div>\r\n  {/* Render Child component */}\r\n  {children}\r\n  isLoggedIn: {isLoggedIn}; <br/>\r\n  name: {doctorName}\r\n {/*Render appointment notification if user is login and apptDetail is avaliable*/} \r\n { isLoggedIn && apptData && ( <>\r\n  <div className=\"notification-container\">\r\n    <h1> Appointment Details</h1> <br/>\r\n\r\n    <div className=\"apptDetails\">\r\n      <h4 class=\"lbl\"> Doctor: </h4> {doctorName} \r\n      <h4 class=\"lbl\"> Speciality: </h4> {doctorSpeciality} \r\n      <h4 class=\"lbl\"> Name: </h4> {name}\r\n      <h4 class=\"lbl\"> Phone Number: </h4> {phoneNum} \r\n      <h4 class=\"lbl\"> Date of Appointment: </h4> {apptDate}\r\n      <h4 class=\"lbl\"> Time Slot: </h4> {timeSlot} \r\n    </div>\r\n\r\n  </div> </>\r\n  )};\r\n\r\n</div> \r\n );\r\n}\r\n\r\n//Export Notification component for use with other parts of the application\r\nexport default Notification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}